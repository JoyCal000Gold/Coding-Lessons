Please Continue Working in GitHub Codespaces once you access the terminal through clicking the 3 bars at the top left corner.

Once you clikc, make sure the click the 16 MB option.
# 1. Install Quarto inside your Codespace terminal temporarily (it will disappear when the Codespace stops unless you add it to your devcontainer)
wget https://github.com/quarto-dev/quarto-cli/releases/download/v1.3.313/quarto-1.3.313-linux-amd64.deb
sudo dpkg -i quarto-1.3.313-linux-amd64.deb

# 2. Check installation
quarto --version

sudo apt update
sudo apt install -y --no-install-recommends software-properties-common dirmngr
sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 51716619E084DAB9
sudo add-apt-repository 'deb https://cloud.r-project.org/bin/linux/ubuntu focal-cran40/'
sudo apt update
sudo apt --fix-broken install
sudo apt install -y r-base

# 3. sudo apt update
sudo apt install -y r-base

# 4. Check installation
R --version

# 5. Create directory for user-installed R packages
mkdir -p ~/Rlibs
chmod u+rwx ~/Rlibs

# 6. Set R to use this directory for packages permanently
echo 'R_LIBS_USER="/home/codespace/Rlibs"' >> ~/.Renviron

# 7. Open R
R

# 8. readRenviron("~/.Renviron")
Sys.getenv("R_LIBS_USER")
.libPaths()

# 9. In R, reload .Renviron
readRenviron("~/.Renviron")

# 10. Verify of .Reviron is sourced
Sys.getenv("R_LIBS_USER")
.libPaths()

# 11. Quit R
q()

# 12. Make sure my user library appears first in .libPaths()
mkdir -p ~/Rlibs
chmod u+rwx ~/Rlibs

echo "R_LIBS_USER=\"$HOME/Rlibs\"" >> ~/.Renviron
export R_LIBS_USER="$HOME/Rlibs"

# 13. Install required R packages (knitr, rmarkdown, reticulate, xfun) in user directory
R -e 'install.packages(c("knitr", "rmarkdown", "xfun", "rmarkdown"), repos="https://cloud.r-project.org", lib=Sys.getenv("R_LIBS_USER"))'

# 14. Confirm R sees your user library path and that the terminal bash works with R
R -e '.libPaths()'

# . nstall Rust via rustup
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh

# Press Enter

# Source your environment to update PATH
source $HOME/.cargo/env

# Check installation
rustc --version
cargo --version

# Install C++ compiler (g++)
sudo apt update
sudo apt install -y build-essential

#Check Installment
g++ --version

# Confirm both rustc and g++ are in Path
which rustc
which g++

# Test C++
echo '#include <iostream>\nint main() { std::cout << "Hello C++!" << std::endl; return 0; }' > test.cpp
g++ test.cpp -o testcpp
./testcpp

# Check Installation of Python
python3 --version

# 6. Render your Quarto file
quarto render "Lesson-One.qmd"

# 7. (Optional) Preview the rendered HTML file in Codespaces
# Right-click Lesson-One.html in Explorer and select "Open with Preview"

